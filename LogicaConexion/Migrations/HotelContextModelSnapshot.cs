// <auto-generated />
using System;
using LogicaConexion.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LogicaConexion.Migrations
{
    [DbContext(typeof(HotelContext))]
    partial class HotelContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LogicaNegocio.Entidades.Cabana", b =>
                {
                    b.Property<int>("NumeroHabitacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NumeroHabitacion"));

                    b.HasKey("NumeroHabitacion");

                    b.HasIndex("NumeroHabitacion")
                        .IsUnique();

                    b.ToTable("Cabanas");
                });

            modelBuilder.Entity("LogicaNegocio.Entidades.Mantenimiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CabanaNumeroHabitacion")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaMantenimiento")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CabanaNumeroHabitacion");

                    b.HasIndex("Id");

                    b.ToTable("Mantenimientos");
                });

            modelBuilder.Entity("LogicaNegocio.Entidades.Tipo", b =>
                {
                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Nombre");

                    b.HasIndex("Nombre")
                        .IsUnique();

                    b.ToTable("Tipos");
                });

            modelBuilder.Entity("LogicaNegocio.Entidades.Usuario", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Email");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("LogicaNegocio.Entidades.Cabana", b =>
                {
                    b.OwnsOne("LogicaNegocio.ValueObject.Descripcion", "Descripcion", b1 =>
                        {
                            b1.Property<int>("CabanaNumeroHabitacion")
                                .HasColumnType("int");

                            b1.Property<string>("Data")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Descripcion");

                            b1.HasKey("CabanaNumeroHabitacion");

                            b1.ToTable("Cabanas");

                            b1.WithOwner()
                                .HasForeignKey("CabanaNumeroHabitacion");
                        });

                    b.OwnsOne("LogicaNegocio.ValueObject.Nombre", "Nombre", b1 =>
                        {
                            b1.Property<int>("CabanaNumeroHabitacion")
                                .HasColumnType("int");

                            b1.Property<string>("Data")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Nombre");

                            b1.HasKey("CabanaNumeroHabitacion");

                            b1.ToTable("Cabanas");

                            b1.WithOwner()
                                .HasForeignKey("CabanaNumeroHabitacion");
                        });

                    b.OwnsOne("LogicaNegocio.ValueObject.Nombre", "NombreTipo", b1 =>
                        {
                            b1.Property<int>("CabanaNumeroHabitacion")
                                .HasColumnType("int");

                            b1.Property<string>("Data")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("NombreTipo");

                            b1.HasKey("CabanaNumeroHabitacion");

                            b1.ToTable("Cabanas");

                            b1.WithOwner()
                                .HasForeignKey("CabanaNumeroHabitacion");
                        });

                    b.OwnsOne("LogicaNegocio.ValueObject.CapacidadHabitacion", "CapacidadHabitacion", b1 =>
                        {
                            b1.Property<int>("CabanaNumeroHabitacion")
                                .HasColumnType("int");

                            b1.Property<int>("Data")
                                .HasColumnType("int")
                                .HasColumnName("CapacidadHabitacion");

                            b1.HasKey("CabanaNumeroHabitacion");

                            b1.ToTable("Cabanas");

                            b1.WithOwner()
                                .HasForeignKey("CabanaNumeroHabitacion");
                        });

                    b.OwnsOne("LogicaNegocio.ValueObject.Fotografia", "Fotografia", b1 =>
                        {
                            b1.Property<int>("CabanaNumeroHabitacion")
                                .HasColumnType("int");

                            b1.Property<string>("Data")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Fotografia");

                            b1.HasKey("CabanaNumeroHabitacion");

                            b1.ToTable("Cabanas");

                            b1.WithOwner()
                                .HasForeignKey("CabanaNumeroHabitacion");
                        });

                    b.OwnsOne("LogicaNegocio.ValueObject.HabilitadaReserva", "HabilitadoAReservas", b1 =>
                        {
                            b1.Property<int>("CabanaNumeroHabitacion")
                                .HasColumnType("int");

                            b1.Property<bool>("Data")
                                .HasColumnType("bit")
                                .HasColumnName("HabilitadoAReservas");

                            b1.HasKey("CabanaNumeroHabitacion");

                            b1.ToTable("Cabanas");

                            b1.WithOwner()
                                .HasForeignKey("CabanaNumeroHabitacion");
                        });

                    b.OwnsOne("LogicaNegocio.ValueObject.Jacuzzi", "Jacuzzi", b1 =>
                        {
                            b1.Property<int>("CabanaNumeroHabitacion")
                                .HasColumnType("int");

                            b1.Property<bool>("Data")
                                .HasColumnType("bit")
                                .HasColumnName("Jacuzzi");

                            b1.HasKey("CabanaNumeroHabitacion");

                            b1.ToTable("Cabanas");

                            b1.WithOwner()
                                .HasForeignKey("CabanaNumeroHabitacion");
                        });

                    b.Navigation("CapacidadHabitacion")
                        .IsRequired();

                    b.Navigation("Descripcion")
                        .IsRequired();

                    b.Navigation("Fotografia")
                        .IsRequired();

                    b.Navigation("HabilitadoAReservas")
                        .IsRequired();

                    b.Navigation("Jacuzzi")
                        .IsRequired();

                    b.Navigation("Nombre")
                        .IsRequired();

                    b.Navigation("NombreTipo")
                        .IsRequired();
                });

            modelBuilder.Entity("LogicaNegocio.Entidades.Mantenimiento", b =>
                {
                    b.HasOne("LogicaNegocio.Entidades.Cabana", "Cabana")
                        .WithMany()
                        .HasForeignKey("CabanaNumeroHabitacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("LogicaNegocio.ValueObject.Costo", "Costo", b1 =>
                        {
                            b1.Property<int>("MantenimientoId")
                                .HasColumnType("int");

                            b1.Property<int>("Data")
                                .HasColumnType("int")
                                .HasColumnName("Costo");

                            b1.HasKey("MantenimientoId");

                            b1.ToTable("Mantenimientos");

                            b1.WithOwner()
                                .HasForeignKey("MantenimientoId");
                        });

                    b.OwnsOne("LogicaNegocio.ValueObject.Descripcion", "Descripcion", b1 =>
                        {
                            b1.Property<int>("MantenimientoId")
                                .HasColumnType("int");

                            b1.Property<string>("Data")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Descripcion");

                            b1.HasKey("MantenimientoId");

                            b1.ToTable("Mantenimientos");

                            b1.WithOwner()
                                .HasForeignKey("MantenimientoId");
                        });

                    b.OwnsOne("LogicaNegocio.ValueObject.Operador", "Operador", b1 =>
                        {
                            b1.Property<int>("MantenimientoId")
                                .HasColumnType("int");

                            b1.Property<string>("Data")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Operador");

                            b1.HasKey("MantenimientoId");

                            b1.ToTable("Mantenimientos");

                            b1.WithOwner()
                                .HasForeignKey("MantenimientoId");
                        });

                    b.Navigation("Cabana");

                    b.Navigation("Costo")
                        .IsRequired();

                    b.Navigation("Descripcion")
                        .IsRequired();

                    b.Navigation("Operador")
                        .IsRequired();
                });

            modelBuilder.Entity("LogicaNegocio.Entidades.Tipo", b =>
                {
                    b.OwnsOne("LogicaNegocio.ValueObject.Costo", "CostoHuesped", b1 =>
                        {
                            b1.Property<string>("TipoNombre")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<int>("Data")
                                .HasColumnType("int")
                                .HasColumnName("CostoHuesped");

                            b1.HasKey("TipoNombre");

                            b1.ToTable("Tipos");

                            b1.WithOwner()
                                .HasForeignKey("TipoNombre");
                        });

                    b.OwnsOne("LogicaNegocio.ValueObject.Descripcion", "Descripcion", b1 =>
                        {
                            b1.Property<string>("TipoNombre")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<string>("Data")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Descripcion");

                            b1.HasKey("TipoNombre");

                            b1.ToTable("Tipos");

                            b1.WithOwner()
                                .HasForeignKey("TipoNombre");
                        });

                    b.Navigation("CostoHuesped")
                        .IsRequired();

                    b.Navigation("Descripcion")
                        .IsRequired();
                });

            modelBuilder.Entity("LogicaNegocio.Entidades.Usuario", b =>
                {
                    b.OwnsOne("LogicaNegocio.ValueObject.Password", "PassWord", b1 =>
                        {
                            b1.Property<string>("UsuarioEmail")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<string>("Data")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("PassWord");

                            b1.HasKey("UsuarioEmail");

                            b1.ToTable("Usuarios");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioEmail");
                        });

                    b.Navigation("PassWord")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
